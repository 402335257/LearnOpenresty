<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="166" onload="init(evt)" viewBox="0 0 1200 166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="166.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="149" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="149" > </text>
<g id="frames">
<g >
<title>0xffffffff94e6bef5 (17 samples, 6.54%)</title><rect x="1067.5" y="37" width="77.1" height="15.0" fill="rgb(246,72,51)" rx="2" ry="2" />
<text  x="1070.46" y="47.5" >0xffffff..</text>
</g>
<g >
<title>resty.dns.resolver:parse_response (3 samples, 1.15%)</title><rect x="345.8" y="69" width="13.7" height="15.0" fill="rgb(208,77,15)" rx="2" ry="2" />
<text  x="348.85" y="79.5" ></text>
</g>
<g >
<title>lj_str_new (3 samples, 1.15%)</title><rect x="777.0" y="53" width="13.6" height="15.0" fill="rgb(218,89,49)" rx="2" ry="2" />
<text  x="780.00" y="63.5" ></text>
</g>
<g >
<title>0xffffffff94e6bef5 (23 samples, 8.85%)</title><rect x="10.0" y="53" width="104.4" height="15.0" fill="rgb(215,199,19)" rx="2" ry="2" />
<text  x="13.00" y="63.5" >0xffffffff94..</text>
</g>
<g >
<title>0xffffffff94e6bef5 (47 samples, 18.08%)</title><rect x="359.5" y="53" width="213.3" height="15.0" fill="rgb(205,3,37)" rx="2" ry="2" />
<text  x="362.46" y="63.5" >0xffffffff94e6bef5</text>
</g>
<g >
<title>C:ngx_http_lua_socket_tcp_connect (72 samples, 27.69%)</title><rect x="359.5" y="69" width="326.7" height="15.0" fill="rgb(212,227,16)" rx="2" ry="2" />
<text  x="362.46" y="79.5" >C:ngx_http_lua_socket_tcp_connect</text>
</g>
<g >
<title>0xffffffff94e6bf79 (14 samples, 5.38%)</title><rect x="114.4" y="53" width="63.5" height="15.0" fill="rgb(209,201,18)" rx="2" ry="2" />
<text  x="117.38" y="63.5" >0xffff..</text>
</g>
<g >
<title>0xffffffff957bd7a5 (7 samples, 2.69%)</title><rect x="191.5" y="53" width="31.8" height="15.0" fill="rgb(242,48,27)" rx="2" ry="2" />
<text  x="194.54" y="63.5" >0x..</text>
</g>
<g >
<title>resty.mysql:read_result (30 samples, 11.54%)</title><rect x="1053.8" y="85" width="136.2" height="15.0" fill="rgb(216,12,25)" rx="2" ry="2" />
<text  x="1056.85" y="95.5" >resty.mysql:read_..</text>
</g>
<g >
<title>C:ngx_http_lua_socket_tcp_send (3 samples, 1.15%)</title><rect x="1040.2" y="53" width="13.6" height="15.0" fill="rgb(240,98,34)" rx="2" ry="2" />
<text  x="1043.23" y="63.5" ></text>
</g>
<g >
<title>0xffffffff94eba05a (3 samples, 1.15%)</title><rect x="177.9" y="53" width="13.6" height="15.0" fill="rgb(214,157,26)" rx="2" ry="2" />
<text  x="180.92" y="63.5" ></text>
</g>
<g >
<title>resty.mysql:_recv_packet (3 samples, 1.15%)</title><rect x="1053.8" y="53" width="13.7" height="15.0" fill="rgb(232,68,15)" rx="2" ry="2" />
<text  x="1056.85" y="63.5" ></text>
</g>
<g >
<title>0xffffffff94e6bf79 (7 samples, 2.69%)</title><rect x="1144.6" y="37" width="31.8" height="15.0" fill="rgb(221,61,2)" rx="2" ry="2" />
<text  x="1147.62" y="47.5" >0x..</text>
</g>
<g >
<title>0xffffffff94eba05a (4 samples, 1.54%)</title><rect x="277.8" y="53" width="18.1" height="15.0" fill="rgb(206,85,44)" rx="2" ry="2" />
<text  x="280.77" y="63.5" ></text>
</g>
<g >
<title>all (260 samples, 100%)</title><rect x="10.0" y="117" width="1180.0" height="15.0" fill="rgb(250,216,39)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>lj_str_new (3 samples, 1.15%)</title><rect x="1053.8" y="37" width="13.7" height="15.0" fill="rgb(231,175,18)" rx="2" ry="2" />
<text  x="1056.85" y="47.5" ></text>
</g>
<g >
<title>resty.dns.resolver:parse_section (3 samples, 1.15%)</title><rect x="345.8" y="53" width="13.7" height="15.0" fill="rgb(245,225,0)" rx="2" ry="2" />
<text  x="348.85" y="63.5" ></text>
</g>
<g >
<title>T:resty.mysql:_compute_token (5 samples, 1.92%)</title><rect x="754.3" y="53" width="22.7" height="15.0" fill="rgb(232,167,26)" rx="2" ry="2" />
<text  x="757.31" y="63.5" >T..</text>
</g>
<g >
<title>epoll_wait (3 samples, 1.15%)</title><rect x="1013.0" y="37" width="13.6" height="15.0" fill="rgb(229,51,45)" rx="2" ry="2" />
<text  x="1016.00" y="47.5" ></text>
</g>
<g >
<title>resty.mysql:_M.connect (150 samples, 57.69%)</title><rect x="359.5" y="85" width="680.7" height="15.0" fill="rgb(254,180,21)" rx="2" ry="2" />
<text  x="362.46" y="95.5" >resty.mysql:_M.connect</text>
</g>
<g >
<title>C:ngx_http_lua_socket_tcp_send (15 samples, 5.77%)</title><rect x="686.2" y="69" width="68.1" height="15.0" fill="rgb(210,11,21)" rx="2" ry="2" />
<text  x="689.23" y="79.5" >C:ngx_h..</text>
</g>
<g >
<title>0xffffffff957bd7a5 (4 samples, 1.54%)</title><rect x="736.2" y="53" width="18.1" height="15.0" fill="rgb(210,96,46)" rx="2" ry="2" />
<text  x="739.15" y="63.5" ></text>
</g>
<g >
<title>0xffffffff94e6bf79 (21 samples, 8.08%)</title><rect x="572.8" y="53" width="95.3" height="15.0" fill="rgb(248,24,14)" rx="2" ry="2" />
<text  x="575.77" y="63.5" >0xffffffff9..</text>
</g>
<g >
<title>0xffffffff94e6bef5 (5 samples, 1.92%)</title><rect x="223.3" y="53" width="22.7" height="15.0" fill="rgb(208,0,33)" rx="2" ry="2" />
<text  x="226.31" y="63.5" >0..</text>
</g>
<g >
<title>resty.mysql:_recv_field_packet (3 samples, 1.15%)</title><rect x="1053.8" y="69" width="13.7" height="15.0" fill="rgb(212,36,23)" rx="2" ry="2" />
<text  x="1056.85" y="79.5" ></text>
</g>
<g >
<title>C:ngx_http_lua_socket_tcp_receive (52 samples, 20.00%)</title><rect x="790.6" y="53" width="236.0" height="15.0" fill="rgb(210,215,13)" rx="2" ry="2" />
<text  x="793.62" y="63.5" >C:ngx_http_lua_socket_tcp_receive</text>
</g>
<g >
<title>0xffffffff94e6bef5 (7 samples, 2.69%)</title><rect x="314.1" y="53" width="31.7" height="15.0" fill="rgb(213,222,48)" rx="2" ry="2" />
<text  x="317.08" y="63.5" >0x..</text>
</g>
<g >
<title>resty.mysql:_compute_token (8 samples, 3.08%)</title><rect x="754.3" y="69" width="36.3" height="15.0" fill="rgb(240,182,31)" rx="2" ry="2" />
<text  x="757.31" y="79.5" >res..</text>
</g>
<g >
<title>C:ngx_http_lua_socket_tcp_receive (20 samples, 7.69%)</title><rect x="223.3" y="69" width="90.8" height="15.0" fill="rgb(247,213,46)" rx="2" ry="2" />
<text  x="226.31" y="79.5" >C:ngx_http..</text>
</g>
<g >
<title>resty.mysql:_M.query (3 samples, 1.15%)</title><rect x="1040.2" y="85" width="13.6" height="15.0" fill="rgb(207,20,5)" rx="2" ry="2" />
<text  x="1043.23" y="95.5" ></text>
</g>
<g >
<title>0xffffffff94e6bef5 (3 samples, 1.15%)</title><rect x="1040.2" y="37" width="13.6" height="15.0" fill="rgb(238,20,35)" rx="2" ry="2" />
<text  x="1043.23" y="47.5" ></text>
</g>
<g >
<title>mysql.lua:0 (260 samples, 100.00%)</title><rect x="10.0" y="101" width="1180.0" height="15.0" fill="rgb(247,5,45)" rx="2" ry="2" />
<text  x="13.00" y="111.5" >mysql.lua:0</text>
</g>
<g >
<title>C:ngx_http_lua_socket_tcp_receive (27 samples, 10.38%)</title><rect x="1067.5" y="53" width="122.5" height="15.0" fill="rgb(219,114,25)" rx="2" ry="2" />
<text  x="1070.46" y="63.5" >C:ngx_http_lua_..</text>
</g>
<g >
<title>ngx_sha1_body (3 samples, 1.15%)</title><rect x="1026.6" y="53" width="13.6" height="15.0" fill="rgb(205,54,6)" rx="2" ry="2" />
<text  x="1029.62" y="63.5" ></text>
</g>
<g >
<title>lj_str_new (5 samples, 1.92%)</title><rect x="754.3" y="37" width="22.7" height="15.0" fill="rgb(233,110,16)" rx="2" ry="2" />
<text  x="757.31" y="47.5" >l..</text>
</g>
<g >
<title>recv (4 samples, 1.54%)</title><rect x="295.9" y="53" width="18.2" height="15.0" fill="rgb(249,120,30)" rx="2" ry="2" />
<text  x="298.92" y="63.5" ></text>
</g>
<g >
<title>lj_str_new (3 samples, 1.15%)</title><rect x="1176.4" y="37" width="13.6" height="15.0" fill="rgb(235,36,9)" rx="2" ry="2" />
<text  x="1179.38" y="47.5" ></text>
</g>
<g >
<title>resty.mysql:_recv_packet (55 samples, 21.15%)</title><rect x="790.6" y="69" width="249.6" height="15.0" fill="rgb(251,154,26)" rx="2" ry="2" />
<text  x="793.62" y="79.5" >resty.mysql:_recv_packet</text>
</g>
<g >
<title>resty.mysql:send_query (3 samples, 1.15%)</title><rect x="1040.2" y="69" width="13.6" height="15.0" fill="rgb(251,36,41)" rx="2" ry="2" />
<text  x="1043.23" y="79.5" ></text>
</g>
<g >
<title>resty.mysql:_recv_packet (27 samples, 10.38%)</title><rect x="1067.5" y="69" width="122.5" height="15.0" fill="rgb(218,178,37)" rx="2" ry="2" />
<text  x="1070.46" y="79.5" >resty.mysql:_re..</text>
</g>
<g >
<title>0xffffffff957bd7a5 (4 samples, 1.54%)</title><rect x="668.1" y="53" width="18.1" height="15.0" fill="rgb(230,108,27)" rx="2" ry="2" />
<text  x="671.08" y="63.5" ></text>
</g>
<g >
<title>resty.dns.resolver:_tcp_query (77 samples, 29.62%)</title><rect x="10.0" y="85" width="349.5" height="15.0" fill="rgb(251,140,34)" rx="2" ry="2" />
<text  x="13.00" y="95.5" >resty.dns.resolver:_tcp_query</text>
</g>
<g >
<title>0xffffffff94e6bef5 (11 samples, 4.23%)</title><rect x="686.2" y="53" width="50.0" height="15.0" fill="rgb(232,158,42)" rx="2" ry="2" />
<text  x="689.23" y="63.5" >0xfff..</text>
</g>
<g >
<title>gc_sweep (3 samples, 1.15%)</title><rect x="345.8" y="37" width="13.7" height="15.0" fill="rgb(249,171,12)" rx="2" ry="2" />
<text  x="348.85" y="47.5" ></text>
</g>
<g >
<title>0xffffffff94e6bef5 (26 samples, 10.00%)</title><rect x="804.2" y="37" width="118.0" height="15.0" fill="rgb(205,15,44)" rx="2" ry="2" />
<text  x="807.23" y="47.5" >0xffffffff94e6..</text>
</g>
<g >
<title>0x7ffdb80fbee1 (3 samples, 1.15%)</title><rect x="790.6" y="37" width="13.6" height="15.0" fill="rgb(247,200,29)" rx="2" ry="2" />
<text  x="793.62" y="47.5" ></text>
</g>
<g >
<title>0xffffffff94e6bf79 (20 samples, 7.69%)</title><rect x="922.2" y="37" width="90.8" height="15.0" fill="rgb(249,149,18)" rx="2" ry="2" />
<text  x="925.23" y="47.5" >0xffffffff..</text>
</g>
<g >
<title>C:ngx_http_lua_socket_tcp_connect (47 samples, 18.08%)</title><rect x="10.0" y="69" width="213.3" height="15.0" fill="rgb(218,71,12)" rx="2" ry="2" />
<text  x="13.00" y="79.5" >C:ngx_http_lua_socket_tcp_co..</text>
</g>
<g >
<title>0xffffffff94e6bf79 (7 samples, 2.69%)</title><rect x="246.0" y="53" width="31.8" height="15.0" fill="rgb(249,160,53)" rx="2" ry="2" />
<text  x="249.00" y="63.5" >0x..</text>
</g>
<g >
<title>C:ngx_http_lua_socket_tcp_send (7 samples, 2.69%)</title><rect x="314.1" y="69" width="31.7" height="15.0" fill="rgb(206,206,37)" rx="2" ry="2" />
<text  x="317.08" y="79.5" >C:..</text>
</g>
</g>
</svg>
